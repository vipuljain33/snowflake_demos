SNOWFLAKE_LEARNING_DBCREATE OR REPLACE TRANSIENT DATABASE TASK_DB;

// Prepare table
CREATE OR REPLACE TABLE CUSTOMERS (
    CUSTOMER_ID INT AUTOINCREMENT START = 1 INCREMENT =1,
    FIRST_NAME VARCHAR(40) DEFAULT 'JENNIFER' ,
    CREATE_DATE DATE);

    // Create task
CREATE OR REPLACE TASK CUSTOMER_INSERT
    WAREHOUSE = SNOWFLAKE_LEARNING_WH
    SCHEDULE = '1 MINUTE'
    AS 
    INSERT INTO CUSTOMERS(CREATE_DATE) VALUES(CURRENT_TIMESTAMP);

    SHOW TASKS;

    
GRANT EXECUTE TASK ON ACCOUNT
  TO ROLE sysadmin;
   
    // Task starting and suspending
ALTER TASK CUSTOMER_INSERT RESUME;
ALTER TASK CUSTOMER_INSERT SUSPEND;

SELECT * FROM CUSTOMERS;

// Prepare a second table
CREATE OR REPLACE TABLE CUSTOMERS2 (
    CUSTOMER_ID INT,
    FIRST_NAME VARCHAR(40),
    CREATE_DATE DATE);

    // Suspend parent task
// **NOTE: Before modifying anything in the tree of tasks the root task needs to be suspended**

ALTER TASK CUSTOMER_INSERT SUSPEND;

// Create a child task
CREATE OR REPLACE TASK CUSTOMER_INSERT2
    WAREHOUSE = SNOWFLAKE_LEARNING_WH
    AFTER CUSTOMER_INSERT
    AS 
    INSERT INTO CUSTOMERS2 SELECT * FROM CUSTOMERS;
    
// Prepare a third table
CREATE OR REPLACE TABLE CUSTOMERS3 (
    CUSTOMER_ID INT,
    FIRST_NAME VARCHAR(40),
    CREATE_DATE DATE,
    INSERT_DATE DATE DEFAULT DATE(CURRENT_TIMESTAMP));

    // Create a child task
CREATE OR REPLACE TASK CUSTOMER_INSERT3
    WAREHOUSE = SNOWFLAKE_LEARNING_WH
    AFTER CUSTOMER_INSERT2
    AS 
    INSERT INTO CUSTOMERS3 (CUSTOMER_ID,FIRST_NAME,CREATE_DATE) SELECT * FROM CUSTOMERS2;

    
SHOW TASKS;

// Resume tasks (first resume child tasks)
ALTER TASK CUSTOMER_INSERT3 RESUME;
ALTER TASK CUSTOMER_INSERT2 RESUME;

// Resume tasks (then resume root task)
ALTER TASK CUSTOMER_INSERT RESUME;

SELECT * FROM CUSTOMERS2;

SELECT * FROM CUSTOMERS3;

// Suspend tasks again
ALTER TASK CUSTOMER_INSERT SUSPEND;
ALTER TASK CUSTOMER_INSERT2 SUSPEND;
ALTER TASK CUSTOMER_INSERT3 SUSPEND;


CREATE OR REPLACE PROCEDURE CUSTOMERS_INSERT_PROCEDURE (CREATE_DATE varchar)
    RETURNS STRING NOT NULL
    LANGUAGE JAVASCRIPT
    AS
        $$
        var sql_command = 'INSERT INTO CUSTOMERS(CREATE_DATE) VALUES(:1);'
        snowflake.execute(
            {
            sqlText: sql_command,
            binds: [CREATE_DATE]
            });
        return "Successfully executed.";
        $$;


CREATE OR REPLACE TASK CUSTOMER_TAKS_PROCEDURE
WAREHOUSE = SNOWFLAKE_LEARNING_WH
SCHEDULE = '1 MINUTE'
AS CALL  CUSTOMERS_INSERT_PROCEDURE (CURRENT_TIMESTAMP);

SHOW TASKS;

ALTER TASK CUSTOMER_TAKS_PROCEDURE RESUME;

SELECT * FROM CUSTOMERS;



    
